
检查是否安装成功：django-admin --version

创建项目：django-admin startproject myblog #项目名 myblog

创建应用： 打开命令行 manage.py 同级目录
	 python manage.py startapp blog #blog 应用名称
	 添加应用名到 settings.py 中的 INSTALLED_APPS 里面

启动服务：python manage.py runserver  8010 # 默认端口8000


创建项目目录文件解析：
	wsgi.py: python 服务器网关接口
		 python 应用与web服务器之间的接口
	
	urls.py: url配置文件
		 django项目中所以地址（页面）都需要我们自己去配置url

	settings.py: 项目的总配置文件
		     里面包含了数据库、web应用、时间等各种配置

	__init__.py: python 中声明模块文件，内容默认为空，有了它，当前目录就成了一个模块，可以直接在代码中引用


应用目录解析：
	migrations: 数据移植（迁移）模块 

	admin.py: 该应用的后台管理系统配置文件

	apps.py: 该应用的配置文件 --> django.1.9以后自动生成

	models.py: 数据模块 使用ORM框架 类似于MVC结构中 Models (模型)

	test.py: 自动化测试模块 django 提供了自动化测试功能，在这里写测试脚本（语句）即可

	views.py: 执行响应的代码所在模块 代码逻辑处理的主要地点，项目中大部分代码均在这里编写




开发第一个Template --> DjangoTemplates
	语法： https://www.cnblogs.com/haiyan123/p/7725568.html
	1.在app的根目录下创建名叫 Templates 的目录
	2.在该目录下创建 HTML 文件
	3.在 views.py 中返回 render()

	render() 函数中支持一个 dict 类型参数
	该字典事后台传到模版的参数，键为参数名
	在模版中使用{{参数名}}来直接使用

django 查找 Template
	dango 安装 INSTALLED_APPS 中的添加顺序查找 Templates
	不同应用下的 Templates 中的 同名.html文件会冲突
	解决办法：
		在应用的 Templates 目录下创建一个以应用名为名称的目录
		将html文件放入新建的目录下


Django 中的 Models 是什么？
	通常，一个 Model 对应数据库的一张数据表
	django 中 Models 以类的形式表现
	它包含了一些基本字段以及数据的一些行为
	在 dango 中我们以创建类的形式创建数据表，因此我们在编写代码中，我们对数据库的操作，事实上都是对类以及类的对象进行操作，我们也只需要对类和类的对象进行操作，就可以操作数据库，不写任何sql 语句来直接在代码上和数据库进行交互。
	这种方式叫 ORM

	ORM
 		对象关系映射（Object Relation Mapping）
		实现了对象和数据库之间的映射
		隐藏了数据访问细节，不需要编写SQL语句

	编写 Models
		在应用根目录下创建 models.py，并引入 models 模块
		创建类，继承 models.Model，该类即是一张数据表
		在类中创建字段
	
	字段创建
		字段即类里面的属性（变量）
		attr = models.CharField(max_length=64)
		https://docs.djangoproject.com/en/2.1/ref/models/fields/

	生产数据表
		命令行进入 manage.py 同级目录
		执行 python manage.py makemigrations 应用名（应用名：可选）
		再执行 python manage.py migrate

		查看：
			Django 会自动在 app/migrations/ 目录下生成移植文件
			执行 python manage.py sqlmigrate 应用名 文件id 查看sql语句
			默认 splite3 的数据库在项目根目录下 db.sqlite3

	页面呈现数据
		后台步骤：
			views.py 中 import models
			article = models.Test.objects.get(pk=1)


Django shell
	
	什么是django shell ?
		它是一个python 的交互式命令行程序
		它自动引入了我们的项目环境
		我们可以使用它与我们的项目进行交互
	
	如何使用 django shell ?
		python manage.py shell  启动
		例如：
			from blog.models import Test # 引入这个类
			Test.objects.all() # <QuerySet [<Test: 静夜思>]> 然后得到所有的数据 通过代码的方式与项目进行交互
	
	django shell 有什么用？
		我们可以使用 Django shell 来进行一些调试工作
		测试未知方法







	









	