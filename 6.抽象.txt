第六章 抽象
	新的函数
		map(func, list)	对序列中每个元素应用函数Python 2.x 返回列表。Python 3.x 返回迭代器
			def square(x): return x ** 2 #计算平方数
			map(square, [1,2,3]) # [1,2,9]
		
		filter(func, list) 返回起函数为真的元素列表
			def test(n): return n % 2 == 1 # 跟2取余为1的数
			filter(test,[1,2,3]) # [1, 3]

		reduce(func, list, initializer) 函数会对参数序列中元素进行累积 #initializer--初始化参数
			reduce(add, [1,2,3]) # 6
			reduce(add, [1,2,3],4) # 10
			reduce(lambda x, y:x+y, [1,2,3]) # 6 匿名函数

		sum(list, start)  方法对系列进行求和计算 # start指定相加的参数，如果没有设置这个值，默认为0
			sum([0,1,2]) # 3
			sum([0,1,2],10) # 13

		apply() 调用函数，可以提供参数
			def test(a,b):print a,b
			apply(test,('zs','ls')) # 'zs ls'
			apply(test,(),{'a':'zs','b':'ls'}) # 'zs ls'
	